# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  anchore: anchore/anchore-engine@1.6.0

jobs:
  scan_image:
    executor: anchore/anchore_engine
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          name: Build container
          command: |
            apk add --update-cache --upgrade curl
            docker build -t ${CIRCLE_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH} .
      - anchore/analyze_local_image:
          dockerfile_path: ./Dockerfile
          image_name: ${CIRCLE_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}
          timeout: '500'
          policy_failure: false
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports
          destination: anchore-reports

  build_push_image:
    machine: true
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          name: Build and Push image
          command: |
            docker build -t ${CIRCLE_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH} .
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker push ${CIRCLE_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}
  
  deploy-prod:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "30:48:49:d1:14:43:aa:3b:cf:3b:0c:95:20:11:c5:e7"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "eval \$(docker-machine env dvc1) && docker service update --image ${CIRCLE_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH} movie-app_movies-api"

  app-build:
    docker:
      - image: circleci/node:12.10
    working_directory: ~/movie-analyst-api
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn        
      - run: 
          name: Run tests
          command: yarn test
      - persist_to_workspace:
          root: .
          paths:
            - server.js 
            - secrets.js
            - package.json
            - Dockerfile
            - yarn.lock
#      - run: 
#          name: Create the artifact
#          command: |
#            mkdir /tmp/bundle
#            zip -r /tmp/bundle/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_SHA1}.zip node_modules/ server.js package.json yarn.lock
#      - store_artifacts:
#          path: /tmp/bundle
#          destination: bundle

workflows:
  version: 2.1
  main:
    jobs:
      - app-build
      - scan_image:
          requires:
            - app-build
          filters:
            branches:
              only: master
      - build_push_image:
          requires:
            - app-build
            - scan_image
      - deploy-prod:
          requires:
            - app-build
            - scan_image
            - build_push_image
          filters:
            branches:
              only: master

